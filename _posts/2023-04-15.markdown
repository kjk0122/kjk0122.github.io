---
layout: post
title:  "4월 15일차"
date:   2023-04-15 21:50:34 +0900
categories: jekyll update
---

JVM
=============================
### JVM(Java Virtual Machine)은 자바 바이트코드를 실행하는 런타임 환경입니다.
### 자바로 작성된 프로그램은 일반적으로 플랫폼에 독립적인 바이트코드로 컴파일되며, 이 바이트코드는 JVM에서 실행됩니다.
###  JVM은 자바 프로그램을 실행하는 데 필요한 이유는 여러가지입니다.

1. 플랫폼 독립성: JVM은 다양한 플랫폼(운영체제, 하드웨어)에서 동일한 바이트코드를 실행할 수 있도록 설계되었습니다. 즉, 한 번 작성된 자바 프로그램은 JVM이 설치된 모든 플랫폼에서 실행될 수 있습니다. 이러한 특징은 "Write Once, Run Anywhere"라고 불리며, 자바의 주요 장점 중 하나입니다.

2. 메모리 관리: JVM은 자바 프로그램의 메모리 할당 및 해제를 관리합니다. JVM은 가비지 컬렉터(Garbage Collector)를 통해 자동으로 사용되지 않는 메모리를 회수하므로, 프로그래머는 메모리 관리에 대한 부담을 덜 수 있습니다.

3. 보안: JVM은 자바 프로그램의 실행에 있어 보안을 강화합니다. 바이트코드 검증기를 통해 유효한 바이트코드만 실행하도록 하고, 메모리 접근을 제한하여 악성 코드의 실행을 방지합니다.

4. 최적화: JVM은 Just-In-Time 컴파일러(JIT 컴파일러)를 포함하고 있어, 실행 중인 프로그램의 성능을 향상시킵니다. JIT 컴파일러는 자주 사용되는 바이트코드를 기계어로 변환하고 캐시에 저장하여 실행 속도를 높입니다.

## 스택

### 스택 영역은 메소드 호출과 지역 변수에 대한 메모리를 할당하는 영역입니다. 메소드가 호출될 때마다, 해당 메소드에 대한 스택 프레임이 생성되며, 메소드의 매개변수와 지역 변수가 저장됩니다. 메소드 호출이 종료되면, 해당 스택 프레임은 스택에서 제거(pop)됩니다. 스택 영역은 Last-In-First-Out (LIFO) 방식으로 작동하며, 스택 메모리에 대한 접근이 빠릅니다.

## 힙(Heap)

### 힙 영역은 객체와 배열에 대한 메모리를 할당하는 영역입니다. 자바에서 새로운 객체를 생성하거나 배열을 할당할 때, 이러한 데이터는 힙 영역에 저장됩니다. 힙 영역의 메모리는 가비지 컬렉터(Garbage Collector)에 의해 관리되며, 더 이상 참조되지 않는 객체는 가비지 컬렉터에 의해 정리됩니다. 힙 영역은 크기가 가변적이며, 프로그램 실행 도중 메모리가 부족하면 운영체제로부터 추가 메모리를 요청할 수 있습니다.