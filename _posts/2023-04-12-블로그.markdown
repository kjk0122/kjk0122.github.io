---
layout: post
title:  "4월 12일차 TIL"
date:   2023-04-12 17:40:34 +0900
categories: jekyll update
---

오늘자 공부 내역

1. JPA는 언제 필요하고 언제 필요하지 않은지?

JPA가 필요한 경우는 객체 지향적인 코드 작성이 중요한 경우와 데이터베이스 스키마의 변경이 빈번한 경우입니다.
특정 객체를 조회하기 위해 다른 객체와의 조인이 필요한 경우 JPA를 사용하면 객체간의 연관 관계를 매핑하여 자연스럽고 간단한 코드를 작성할 수 있습니다.
그리고 변경 또한 JPA를 사용하면 데이터베이스 스키마와 객체 간의 매핑만 변경하면 되기에 스키마의 변경이 빈번한 경우는 JPA로 하는 것이 좋습니다.

반면, 만약 단순한 쿼리를 작성하는 게 아닌 경우에는 JPA가 필요하지 않습니다. 이 경우에는 JPA보다는 직접 SQL 쿼리를 작성하는 것이 더 나을수도 있기 때문입니다.

2. JPA에서 더티 체킹은 무엇인가?
   JPA에서 더티 체킹(Dirty Checking)은 엔티티 객체의 변경 상태를 자동으로 감지하는 기능을 의미합니다.
   JPA는 영속성 컨텍스트(Persistence Context)라는 캐시를 가지고 있는데, 이 영속성 컨텍스트가 엔티티 객체의 변경 상태를 감지하여
   자동으로 업데이트 쿼리를 생성하고 데이터베이스를 갱신하는 것을 '더티 체킹'이라고 합니다. 더티 체킹은 개발자가 직접 SQL 쿼리를 작성하지 않아도 자동으로 데이터베이스를 갱신할 수 있어서 개발 생산성과 유지보수성을 높여줍니다.
   게다가, 영속성 컨텍스트가 엔티티 객체의 변경 상태를 감지하기 때문에, 개발자가 변경 사항을 추적하고 관리할 필요가 없어지므로 실수를 줄일 수 있습니다.

3. 트리, 그래프

|        | 트리 (Tree) | 그래프 (Graph)             |
|--------|-------------|---------------------------|
| 정의   | 비순환적인 자료구조 | 순환 또는 비순환적인 자료구조 |
| 방향성 | 단방향        | 양방향 또는 단방향         |
| 사이클 | 사이클 없음  | 사이클 가능                |
| 루트   | 하나의 루트 노드 | 루트 노드 없음             |
| 자식 노드 수 | 여러 개 가능 | 여러 개 가능             |
| 탐색 방법 | 선형 탐색보다 효율적 | 선형 탐색에 비해 비효율적 |
